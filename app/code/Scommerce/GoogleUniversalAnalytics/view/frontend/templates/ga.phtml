<?php
/**
 * @var $this Scommerce_UniversalAnalytics_Block_Ga
 */
?>
<?php
$helper = $this->getHelper();
$bLinker = ($helper->isLinkerEnabled() && strlen($helper->getDomainsToLink())>0);
$userId = $this->getCustomerId();
?>
<script>
    //<![CDATA[
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', '<?php echo $helper->getAccountId(); ?>', '<?php echo $this->getMainDomain() ?>'<?php if ($bLinker): echo ", {'allowLinker': true}"; endif;?>);
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('create', '<?php echo $helper->getLinkedAccountId()?>', {'name':'<?php echo $helper->getLinkedAccountName()?>'});
    <?php endif;?>
    
	//enhanced ecommerce
	<?php if ($helper->isEnhancedEcommerceEnabled()):?>
    ga('require', 'ec');
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.require', 'ec');
    <?php endif;?>
    //console.log('ec enabled');
    <?php endif;?>
    
	//userid
	<?php if ($helper->isUserIdEnabled() && strlen($userId)):?>
    ga('set', '&uid', '<?php echo $userId?>'); // Set the user ID using signed-in user_id.
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.set', '&uid','<?php echo $userId?>');// Set the user ID using signed-in user_id.
    <?php endif;?>
    <?php endif;?>
	
	//displayfeatures
    <?php if ($helper->isDisplayFeature()):?>
    ga('require', 'displayfeatures');
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.require', 'displayfeatures');
    <?php endif;?>
    <?php endif;?>
    
	//linker
	<?php if ($bLinker):?>
    ga('require', 'linker');
    ga('linker:autoLink', [<?php echo $helper->getDomainsToLink()?>]);
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.require', 'linker');
    ga('<?php echo $helper->getLinkedAccountName()?>.linker:autoLink', [<?php echo $helper->getDomainsToLink()?>]);
    <?php endif;?>
    <?php endif;?>
	
    //anonymizeIp
	<?php if ($helper->isAnonymizeIp()):?>
    ga('set', 'anonymizeIp', true);
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.set', 'anonymizeIp', true);
    <?php endif;?>
    <?php endif;?>
    
	//sendview
	<?php if ($this->getPageType()=="other"):
		echo $this->getLayout()
					->createBlock('Scommerce\GoogleUniversalAnalytics\Block\SendView')
					->setTemplate('Scommerce_GoogleUniversalAnalytics::sendview.phtml')
					->toHtml();
	endif;?>
	
	//old ecommerce tracking
    <?php if($this->isEcommerce() && !$helper->isEnhancedEcommerceEnabled()): ?>
    ga('require', 'ecommerce', 'ecommerce.js');
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.require', 'ecommerce', 'ecommerce.js');
    <?php endif;?>
    <?php $order = $this->getOrder();
    if ($helper->sendBaseData()):
        $orderCurrency 		= $order->getBaseCurrencyCode();
        $orderGrandTotal 	= $order->getBaseGrandTotal();
        $orderShippingTotal	= $order->getBaseShippingAmount();
        $orderTax			= $order->getBaseTaxAmount();
    else:
        $orderCurrency 		= $order->getOrderCurrencyCode();
        $orderGrandTotal 	= $order->getGrandTotal();
        $orderShippingTotal	= $order->getShippingAmount();
        $orderTax			= $order->getTaxAmount();
    endif;
    ?>
    ga('set', 'currencyCode', '<?php echo $orderCurrency;?>');
    ga('ecommerce:addTransaction', { 'id': '<?php echo $order->getIncrementId()?>', 'affiliation': '<?php echo $order->getAffiliation() ?>', 'revenue': '<?php echo $orderGrandTotal?>', 'shipping': '<?php echo $orderShippingTotal?>', 'tax': '<?php echo $orderTax?>'});
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.set', 'currencyCode', '<?php echo $orderCurrency;?>');
    ga('<?php echo $helper->getLinkedAccountName()?>.ecommerce:addTransaction', { 'id': '<?php echo $order->getIncrementId()?>', 'affiliation': '<?php echo $order->getAffiliation() ?>', 'revenue': '<?php echo $orderGrandTotal?>', 'shipping': '<?php echo $orderShippingTotal?>', 'tax': '<?php echo $orderTax?>'});
    <?php endif;?>
    <?php foreach($order->getAllItems() as $item): ?>
    <?php if($item->getParentItemId()) continue; ?>
    ga('ecommerce:addItem', {'id': '<?php echo $order->getIncrementId() ?>', 'name': '<?php echo $this->escapeJsQuote($item->getName()) ?>', 'sku': '<?php echo $this->escapeJsQuote($item->getSku()) ?>', 'category': '<?php echo $this->escapeJsQuote($item->getCategory()) ?>', 'price': '<?php echo ($helper->sendBaseData()==true ? $item->getBasePrice() : $item->getPrice()) ?>', 'quantity': '<?php echo $item->getQtyOrdered() ?>'});
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.ecommerce:addItem', {'id': '<?php echo $order->getIncrementId() ?>', 'name': '<?php echo $this->escapeJsQuote($item->getName(), '"') ?>', 'sku': '<?php echo $this->escapeJsQuote($item->getSku()) ?>', 'category': '<?php echo $this->escapeJsQuotpe($item->getCategory()) ?>', 'price': '<?php echo ($helper->sendBaseData()==true ? $item->getBasePrice() : $item->getPrice()) ?>', 'quantity': '<?php echo $item->getQtyOrdered() ?>'});
    <?php endif;?>
    <?php endforeach;?>
    ga('ecommerce:send');
    <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
    ga('<?php echo $helper->getLinkedAccountName()?>.ecommerce:send');
    <?php endif;?>
    <?php endif;?>
    //]]>
</script>

<?php if ($helper->isEnhancedEcommerceEnabled()): 
	$addedProduct = $this->getAddToBasketData();
	$removedProduct = $this->getRemoveFromBasketData();?>
    
    <script>
        //<![CDATA[
        function manipulationOfCart(product, type, list) {
            //product = eval("(" + product + ")");
			if (product.name == undefined){
				product = JSON.parse(product);
			}
            if (list == undefined){
                list='Category - '+ product.category
            }
            ga('ec:addProduct', {
                'id': product.id,
                'name': product.name,
                'category': product.category,
                'brand': product.brand,
                'price': product.price,
                'list': list,
                'quantity': product.qty
            });

            ga('ec:setAction', type, {list: list});

            <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
            ga('<?php echo $helper->getLinkedAccountName()?>.ec:addProduct', {
                'id': product.id,
                'name': product.name,
                'category': product.category,
                'brand': product.brand,
                'price': product.price,
                'list': list,
                'quantity': product.qty
            });

            ga('<?php echo $helper->getLinkedAccountName()?>.ec:setAction', type, {list: list});
            <?php endif;?>

            if (type == 'add'){
                <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
                ga('<?php echo $helper->getLinkedAccountName()?>.send', 'event', 'UX', 'click', 'Add To Cart - ' + product.name, {'nonInteraction': 1});
                <?php endif;?>
                ga('send', 'event', 'UX', 'click', 'Add To Cart - ' + product.name, {'nonInteraction': 1});
            }
            else if (type == 'remove'){
                <?php if (strlen($helper->isLinkAccountsEnabled())>0):?>
                ga('<?php echo $helper->getLinkedAccountName()?>.send', 'event', 'UX', 'click', 'Remove From Cart - ' + product.name, {'nonInteraction': 1});
                <?php endif;?>
                ga('send', 'event', 'UX', 'click', 'Remove From Cart - ' + product.name, {'nonInteraction': 1});
            }
        }
		
		<?php if ($addedProduct):?>    
/*        require(['jquery', 'mage/cookies'], function($){
		/*	$(window).load(function() {
			if(typeof getTrafficSrcCookie !== 'undefined') {	var cookie = getTrafficSrcCookie();
                if (cookie!=null || cookie!= undefined){
                    $.mage.cookies.set("utmz",'utmcsr='+cookie.ga_source+'|utmccn='+cookie.ga_campaign+'|utmcmd='+cookie.ga_medium+'|utmctr='+cookie.ga_keyword+'|utmcct='+cookie.ga_content+'|utmgclid='+cookie.ga_gclid,{ path: '/', domain: '<?php $this->getHelper()->getDomain()?>'});
                } 
                var productToBasket = <?php echo $addedProduct?>;
                var productlist = $.mage.cookies.get("productlist");

                if (productToBasket != undefined) {
                    manipulationOfCart(productToBasket, 'add', productlist);
                    $.mage.cookies.clear("productlist");
                }
				<?php $this->unsAddToBasketData();?>
            });
        });*/
		<?php endif;?>
		
		<?php if ($removedProduct):?>    
        require(['jquery', 'mage/cookies'], function($){
			$(window).load(function() {
                var productOutBasket = <?php echo $removedProduct?>;
                
				if (productOutBasket != undefined) {
                    manipulationOfCart(productOutBasket, 'remove', '');
                }
				<?php $this->unsRemoveFromBasketData();?>
            });
        });
		<?php endif;?>		
        //]]>
    </script>
<?php endif;?>
